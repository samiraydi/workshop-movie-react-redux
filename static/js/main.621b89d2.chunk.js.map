{"version":3,"sources":["components/inputSearch.js","components/starSearch.js","components/movies.js","components/addMovies.js","App.js","Reducers/inputReducer.js","Reducers/starReducer.js","Reducers/movieReducer.js","store.js","serviceWorker.js","index.js"],"names":["InputSearch","state","_this2","this","react_default","a","createElement","type","onChange","e","props","searchinput","target","value","Component","connect","dispatch","x","console","log","StarSearch","style","display","justifyContent","listStyleType","onClick","star","Movies","movielist","filter","el","name","toUpperCase","includes","input","review","map","src","img","alt","width","height","padEnd","movie","AddMovie","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","flexDirection","alignItems","placeholder","setState","add","y","z","App","inputSearch","starSearch","movies","addMovies","InputReducer","arguments","length","undefined","action","StarReducer","MovieReducer","concat","toConsumableArray","Store","createStore","combineReducers","Boolean","window","location","hostname","match","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.621b89d2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nclass InputSearch extends Component {\r\n  state = {  }\r\n  render() { \r\n    return ( <div>\r\n      <input type=\"text\" onChange={(e)=>{this.props.searchinput(e.target.value)}}/>\r\n      <span>Search</span>\r\n    </div> );\r\n  }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    searchinput:x=>{\r\n      dispatch({type:\"ADD_INPUT\",value:x})\r\n      console.log(x)\r\n    }\r\n  }\r\n}\r\n \r\nexport default connect(null,mapDispatchToProps) (InputSearch);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nclass StarSearch extends Component {\r\n  state = {  }\r\n  render() { \r\n    return ( <div>\r\n    <ul style={{display:\"flex\",justifyContent:\"space-between\",listStyleType:\"none\"}}>\r\n      <li onClick={()=>{this.props.star(1)}}>☆</li>\r\n      <li onClick={()=>{this.props.star(2)}}>☆</li>\r\n      <li onClick={()=>{this.props.star(3)}}>☆</li>\r\n      <li onClick={()=>{this.props.star(4)}}>☆</li>\r\n      <li onClick={()=>{this.props.star(5)}}>☆</li>\r\n    </ul>\r\n    </div> );\r\n  }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n  star:e=>{\r\n    dispatch({type:\"ADD_STARS\",value:e})\r\n    console.log(e)\r\n  }}\r\n} \r\n\r\nexport default connect(null,mapDispatchToProps) (StarSearch);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nclass Movies extends Component {\r\n  state = {  }\r\n  render() { \r\n    return (\r\n    <div>\r\n      {this.props.movielist.filter(el=>el.name.toUpperCase().includes(this.props.input.toUpperCase()) &&el.review<=this.props.star).map(el=>{return (\r\n        <div>\r\n          <img src={el.img} alt=\"\" width=\"300px\" height=\"300px\"/>\r\n          <p>{''.padEnd(el.review,'☆')}</p>\r\n          <p>{el.name}</p>\r\n        </div>\r\n      )})}\r\n    </div>\r\n     );\r\n  }\r\n}\r\nconst mapStateToProps=(state)=>{\r\nreturn{\r\n  movielist:state.movie,\r\n  star:state.star,\r\n  input:state.input\r\n}\r\n}\r\n \r\nexport default connect(mapStateToProps,null)(Movies)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nclass AddMovie extends Component {\r\nconstructor(props){\r\n  super(props)\r\n  this.state=({\r\n  name:\"\",\r\n  review:0,\r\n  img:\"\"\r\n  })\r\n}\r\n  render() { \r\n  \r\n    return ( <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"}}>\r\n      <input placeholder=\"name\" onChange={(e)=>{\r\n        this.setState({\r\n          name:e.target.value\r\n        })\r\n      }} type=\"text\"/>\r\n      <input placeholder=\"review\" onChange={(e)=>{\r\n        this.setState({\r\n          review:e.target.value\r\n        })\r\n      }} type=\"text\"/>\r\n      <input placeholder=\"img\" onChange={(e)=>{\r\n        this.setState({\r\n          img:e.target.value\r\n        })\r\n      }} type=\"text\"/>\r\n      <span onClick={\r\n        ()=>{this.props.add(this.state.name,this.state.review,this.state.img)}\r\n      }>Add</span>\r\n    </div> );\r\n  }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{ add:(x,y,z)=>{\r\n    let obj={name:x,review:y,img:z}\r\n    dispatch({type:\"ADD_MOVIE\",value:obj})\r\n  }}\r\n \r\n}\r\n \r\nexport default connect(null,mapDispatchToProps) (AddMovie);","import React, { Component } from 'react';\nimport InputSearch from './components/inputSearch';\nimport StarSearch from './components/starSearch';\nimport Movies from './components/movies';\nimport AddMovie from './components/addMovies';\nclass App extends Component {\n  render() { \n    return ( \n      <div>\n      <div style={{display:\"flex\",justifyContent:\"space-around\"}}>\n        <InputSearch/>\n        <StarSearch/>\n      </div>\n      <Movies/>\n      <AddMovie/>\n    </div>\n    );\n  }\n}\n \nexport default App;","const InputReducer=(state='',action)=>{\r\n  if(action.type===\"ADD_INPUT\"){\r\n    return action.value\r\n  }\r\n  return state\r\n\r\n}\r\nexport default InputReducer","const StarReducer=(state=5,action)=>{\r\n  if(action.type===\"ADD_STARS\"){\r\n    return action.value\r\n  }\r\n  return state\r\n\r\n}\r\nexport default StarReducer","const MovieReducer=(state=[\r\n  { name: 'Avengers: Endgame', img: 'https://upload.wikimedia.org/wikipedia/en/0/0d/Avengers_Endgame_poster.jpg', review: '4' }, \r\n  { name: 'John Wick 3: Parabellum', img: 'https://image.tmdb.org/t/p/w185/ziEuG1essDuWuC5lpWUaw1uXY2O.jpg', review: '3' },\r\n  { name: 'Breakthrough 2019', img: 'https://egybest.video/uploads/articles/c08520bc.png', review: '2' }]\r\n  ,action)=>{\r\n  if(action.type===\"ADD_MOVIE\"){\r\n    return [...state,action.value]\r\n  }\r\n  return state\r\n\r\n}\r\nexport default MovieReducer","import {createStore,combineReducers} from \"redux\"\r\nimport InputReducer from \"./Reducers/inputReducer\";\r\nimport StarReducer from \"./Reducers/starReducer\";\r\nimport MovieReducer from \"./Reducers/movieReducer\";\r\n     const Store=createStore(combineReducers({\r\ninput:InputReducer,\r\nstar:StarReducer,\r\nmovie:MovieReducer\r\n     }))\r\n     export default Store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider} from \"react-redux\"\nimport Store from './store.js'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={Store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}